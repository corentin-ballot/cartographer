{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/svelte/store/index.mjs","../../src/stores/board.js","../../src/components/cell.svelte","../../src/stores/modal.js","../../src/components/coins.svelte","../../src/stores/user.js","../../src/components/scores.svelte","../../src/components/board.svelte","../../node_modules/svelte-accessible-dialog/src/components/DialogPortal.svelte","../../node_modules/svelte-accessible-dialog/src/components/TrapScreenReader.svelte","../../node_modules/svelte-accessible-dialog/src/components/TrapFocus.svelte","../../node_modules/svelte-accessible-dialog/src/components/LockScroll.svelte","../../node_modules/svelte-accessible-dialog/src/components/DialogOverlayInner.svelte","../../node_modules/svelte-accessible-dialog/src/components/DialogOverlay.svelte","../../node_modules/svelte-accessible-dialog/src/components/DialogContent.svelte","../../src/components/modal.svelte","../../src/components/login.svelte","../../src/utils/rules.js","../../src/components/setup.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot_spread(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_spread_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_spread_changes_fn(dirty) | get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : context || []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : options.context || []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.38.2' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to seperate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_custom_elements_slots, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_await_block_branch, update_keyed_each, update_slot, update_slot_spread, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { writable, get } from 'svelte/store'\r\n\r\nexport const getRegions = () => {\r\n    return get(cells).filter(cell => cell.type != CELL_TYPES.EMPTY.id).map(cell => {\r\n        let cs = [cell.id];\r\n        if(cell.id >= get(cellsPerLine) && get(cells)[cell.id - get(cellsPerLine)].type == cell.type) cs.push(cell.id - get(cellsPerLine));\r\n        if(cell.id < get(cells).length - get(cellsPerLine) && get(cells)[cell.id + get(cellsPerLine)].type == cell.type) cs.push(cell.id + get(cellsPerLine));\r\n        if(cell.id%get(cellsPerLine) != 0 && get(cells)[cell.id - 1].type == cell.type) cs.push(cell.id - 1);\r\n        if(cell.id%get(cellsPerLine) != get(cellsPerLine) - 1 && get(cells)[cell.id + 1].type == cell.type) cs.push(cell.id + 1);\r\n\r\n        return {\r\n            type: cell.type,\r\n            cells: cs\r\n        }\r\n    }).reduce(regionsReducer).reduce(regionsReducer);\r\n}\r\n\r\nconst regionsReducer = (regions, region) => {\r\n    if(!Array.isArray(regions)) regions = [regions];\r\n    let found = false;\r\n    regions.forEach(r => {\r\n        if(r.type == region.type && r.cells.some(_r => region.cells.includes(_r))) {\r\n            r.cells = r.cells.concat(region.cells).filter((c, index, a) => a.indexOf(c) == index);\r\n            found = true;\r\n        }\r\n    });\r\n    return found ? regions : [...regions, region];\r\n}\r\n\r\nexport const CELL_TYPES = {\r\n    EMPTY: {id: 0, isEditable: true},\r\n    MOUNTAIN: {id: 1, isEditable: false},\r\n    FOREST: {id: 2, isEditable: true},\r\n    FIELD: {id: 3, isEditable: true},\r\n    SEA: {id: 4, isEditable: true},\r\n    VILLAGE: {id: 5, isEditable: true},\r\n    MONSTER: {id: 6, isEditable: true},\r\n    CREVASSE: {id: 7, isEditable: false}\r\n}\r\n\r\nexport function Cell(id, type = CELL_TYPES.EMPTY.id, isRuins = false) {\r\n    this.id = id;\r\n    this.type = type;\r\n    this.isRuins = isRuins;\r\n\r\n    this.hasNeighborOfType = function(_type) {\r\n        return (this.id >= get(cellsPerLine) && get(cells)[this.id - get(cellsPerLine)].type == _type)\r\n                || (this.id < get(cells).length - get(cellsPerLine) && get(cells)[this.id + get(cellsPerLine)].type == _type)\r\n                || (this.id%get(cellsPerLine) != 0 && get(cells)[this.id - 1].type == _type)\r\n                || (this.id%get(cellsPerLine) != get(cellsPerLine) - 1 && get(cells)[this.id + 1].type == _type);\r\n    }\r\n\r\n    this.getNeighborsOfType = function(_type) {\r\n        let neighbors = [];\r\n        if(this.id >= get(cellsPerLine) && get(cells)[this.id - get(cellsPerLine)].type == _type) neighbors.push(this.id - get(cellsPerLine));\r\n        if(this.id < get(cells).length - get(cellsPerLine) && get(cells)[this.id + get(cellsPerLine)].type == _type) neighbors.push(this.id + get(cellsPerLine));\r\n        if(this.id%get(cellsPerLine) != 0 && get(cells)[this.id - 1].type == _type) neighbors.push(this.id - 1);\r\n        if(this.id%get(cellsPerLine) != get(cellsPerLine) - 1 && get(cells)[this.id + 1].type == _type) neighbors.push(this.id + 1);\r\n        return neighbors;\r\n    }\r\n\r\n    this.getNeighborsType = function() {\r\n        let neighbors = [];\r\n        if(this.id >= get(cellsPerLine) && get(cells)[this.id - get(cellsPerLine)].type != CELL_TYPES.EMPTY.id) neighbors.push(get(cells)[this.id - get(cellsPerLine)].type);\r\n        if(this.id < get(cells).length - get(cellsPerLine) && get(cells)[this.id + get(cellsPerLine)].type != CELL_TYPES.EMPTY.id) neighbors.push(get(cells)[this.id + get(cellsPerLine)].type);\r\n        if(this.id%get(cellsPerLine) != 0 && get(cells)[this.id - 1].type != CELL_TYPES.EMPTY.id) neighbors.push(get(cells)[this.id - 1].type);\r\n        if(this.id%get(cellsPerLine) != get(cellsPerLine) - 1 && get(cells)[this.id + 1].type != CELL_TYPES.EMPTY.id) neighbors.push(get(cells)[this.id + 1].type);\r\n        return neighbors;\r\n    }\r\n\r\n    this.isAtEdge = function() {\r\n        return this.id < get(cellsPerLine) || this.id >= get(cells).length - get(cellsPerLine) || this.id%get(cellsPerLine) == 0 || this.id%get(cellsPerLine) == get(cellsPerLine) -1;\r\n    }\r\n\r\n    this.isSurrounded = function() {\r\n        return (this.id < get(cellsPerLine) || get(cells)[this.id - get(cellsPerLine)].type != CELL_TYPES.EMPTY.id)\r\n        && (this.id >= get(cells).length - get(cellsPerLine) || get(cells)[id + get(cellsPerLine)].type != CELL_TYPES.EMPTY.id)\r\n        && (this.id%get(cellsPerLine) == 0 || get(cells)[id - 1].type != CELL_TYPES.EMPTY.id)\r\n        && (this.id%get(cellsPerLine) == get(cellsPerLine) - 1 || get(cells)[id + 1].type != CELL_TYPES.EMPTY.id);\r\n    }\r\n}\r\n\r\nexport const boards = [\r\n    {\r\n        name: \"Face A\", \r\n        init: () => {\r\n            let array = initBoard(121);\r\n            // Add mountains\r\n            array[14].type = CELL_TYPES.MOUNTAIN.id;array[30].type = CELL_TYPES.MOUNTAIN.id;array[60].type = CELL_TYPES.MOUNTAIN.id;array[90].type = CELL_TYPES.MOUNTAIN.id;array[106].type = CELL_TYPES.MOUNTAIN.id;\r\n            // Add ruins\r\n            array[16].isRuins = true;array[23].isRuins = true;array[23].isRuins = true;array[31].isRuins = true;array[89].isRuins = true;array[97].isRuins = true;array[104].isRuins = true;\r\n            return array;\r\n        }\r\n    },\r\n    {\r\n        name: \"Face B\",\r\n        init: () => {\r\n            let array = initBoard(121);\r\n            // Add mountains\r\n            array[19].type = CELL_TYPES.MOUNTAIN.id;\r\n            array[25].type = CELL_TYPES.MOUNTAIN.id;\r\n            array[82].type = CELL_TYPES.MOUNTAIN.id;\r\n            array[97].type = CELL_TYPES.MOUNTAIN.id;\r\n            array[101].type = CELL_TYPES.MOUNTAIN.id;\r\n\r\n            // Add crevasses\r\n            array[38].type = CELL_TYPES.CREVASSE.id;\r\n            array[48].type = CELL_TYPES.CREVASSE.id;\r\n            array[49].type = CELL_TYPES.CREVASSE.id;\r\n            array[59].type = CELL_TYPES.CREVASSE.id;\r\n            array[60].type = CELL_TYPES.CREVASSE.id;\r\n            array[61].type = CELL_TYPES.CREVASSE.id;\r\n            array[71].type = CELL_TYPES.CREVASSE.id;\r\n            \r\n            // Add ruins\r\n            array[17].isRuins = true;\r\n            array[24].isRuins = true;\r\n            array[67].isRuins = true;\r\n            array[85].isRuins = true;\r\n            array[102].isRuins = true;\r\n            return array;\r\n        }\r\n    }\r\n]\r\n\r\nconst initBoard = (length = 121) => {\r\n    return Array.from({length}, (v,i) => new Cell(i));\r\n}\r\n\r\nexport const board = writable(boards[0]);\r\nexport const cells = writable([]);\r\nexport const coins = writable(0);\r\nexport const cellsPerLine = writable(11);\r\nexport const title = writable(\"\");\r\nexport const scoring = writable([{},{},{},{}]);\r\n\r\nboard.subscribe(currentValue => {\r\n    cells.set(currentValue.init());\r\n})","<script>\r\n    import { cellsPerLine as cpl, CELL_TYPES} from \"../stores/board\";\r\n\r\n    export let data = {};\r\n\r\n    export let cellsPerLine = $cpl;\r\n\r\n    export let isFisrtLine = false;\r\n    export let isFisrtCol = false;\r\n    export let isLastLine = false;\r\n    export let isLastCol = false;\r\n\r\n    export let click;\r\n</script>\r\n\r\n<button class=\"cell-container\" style=\"flex-basis: {(100/cellsPerLine)}%;\" on:click={click}>\r\n    <div class=\"cell\"\r\n        class:cell-mountain={data.type == CELL_TYPES.MOUNTAIN.id}\r\n        class:cell-forest={data.type == CELL_TYPES.FOREST.id}\r\n        class:cell-field={data.type == CELL_TYPES.FIELD.id}\r\n        class:cell-sea={data.type == CELL_TYPES.SEA.id}\r\n        class:cell-village={data.type == CELL_TYPES.VILLAGE.id}\r\n        class:cell-monster={data.type == CELL_TYPES.MONSTER.id}\r\n        class:cell-crevasse={data.type == CELL_TYPES.CREVASSE.id}\r\n        class:cell-ruins={data.isRuins} \r\n        class:cell-top={isFisrtLine}\r\n        class:cell-bottom={isLastLine}\r\n        class:cell-left={isFisrtCol}\r\n        class:cell-right={isLastCol}\r\n        >\r\n    </div>\r\n</button>\r\n\r\n<style>\r\n    .cell-container {\r\n        width: 100%;\r\n        background-color: none;\r\n        padding: 0;\r\n        margin: 0;\r\n        border: none;\r\n    }\r\n    .cell {\r\n        padding-top: 100%;\r\n        border: dashed grey 1px;\r\n        cursor: pointer;\r\n        position: relative;\r\n\r\n        background-position: center;\r\n        background-repeat: no-repeat;\r\n        background-size: 75%;\r\n    }\r\n    .cell-top {\r\n        border-top: none;\r\n    }\r\n    .cell-bottom {\r\n        border-bottom: none;\r\n    }\r\n    .cell-left {\r\n        border-left: none;\r\n    }\r\n    .cell-right {\r\n        border-right: none;\r\n    }\r\n    .cell-mountain {\r\n        background-color: #95301a;\r\n        background-image: url(\"../assets/img/mountain.svg\");\r\n    }\r\n    .cell-mountain::after {\r\n        content: \"\";\r\n        position: absolute;\r\n        display: block;\r\n        background-image: url(\"../assets/img/coin.svg\");\r\n        width: 40%;\r\n        height: 40%;\r\n        bottom: 5%;\r\n        right: calc(50% - 20%);\r\n    }\r\n    .cell-forest {\r\n        background-color: forestgreen;\r\n        background-image: url(\"../assets/img/forest.svg\");\r\n    }\r\n    .cell-field {\r\n        background-color: sandybrown;\r\n        background-image: url(\"../assets/img/field.svg\");\r\n    }\r\n    .cell-sea {\r\n        background-color: #005d93;\r\n        background-image: url(\"../assets/img/sea.svg\");\r\n    }\r\n    .cell-village {\r\n        background-color: #fa1425 ;\r\n        background-image: url(\"../assets/img/village.svg\");\r\n    }\r\n    .cell-monster {\r\n        background-color: darkorchid;\r\n        background-image: url(\"../assets/img/monster.svg\");\r\n    }\r\n    .cell-crevasse {\r\n        background-color: #534e4e;\r\n        background-image: url(\"../assets/img/crevasse.svg\");\r\n    }\r\n    .cell-ruins {\r\n        background-image: url(\"../assets/img/ruins.svg\");\r\n    }\r\n</style>","import { writable } from 'svelte/store'\r\n\r\nexport const isOpen = writable(false);\r\nexport const selectedCell = writable(null);","<script>\r\n   import { coins } from '../stores/board';\r\n\r\n   const setCoin = (quantity) => {\r\n       $coins = quantity;\r\n   }\r\n\r\n   const addCoin = (quantity = 1) => {\r\n       $coins += quantity;\r\n   }\r\n</script>\r\n\r\n<div class=\"coins\">\r\n    {#each Array.from({length: 14}, (v, k) => k) as index}\r\n        <button class=\"coin\" class:coin-earn={index < $coins} on:click={() => {setCoin(index+1 == $coins ? index:index+1)}}></button>\r\n    {/each}\r\n</div>\r\n\r\n<style>\r\n    .coins {\r\n        display: flex;\r\n        margin-bottom: 16px;\r\n    }\r\n\r\n    .coin {\r\n        display: block;\r\n        width: 100%;\r\n        height: 32px;\r\n        background-image: url(\"../assets/img/coin.svg\");\r\n        background-repeat: no-repeat;\r\n        background-position: center;\r\n        background-size: contain;\r\n        filter: grayscale(.8);\r\n        opacity: .5;\r\n        cursor: pointer;\r\n        margin: 0 4px;\r\n        padding: 0;\r\n        background-color: unset;\r\n        border: none;\r\n    }\r\n\r\n    .coin:first-child {\r\n        margin-left: 0;\r\n    }\r\n    .coin:last-child {\r\n        margin-right: 0;\r\n    }\r\n\r\n    .coin-earn {\r\n        opacity: 1;\r\n        filter: grayscale(0);\r\n    }\r\n</style>","import { writable } from \"svelte/store\";\r\n\r\nexport const username = writable(localStorage.username);\r\n\r\nusername.subscribe((currentValue) => {\r\n    if(currentValue) localStorage.username = currentValue;\r\n})\r\n","<script>\r\n    import { get } from \"svelte/store\";\r\n    import { cells, cellsPerLine, CELL_TYPES, coins, scoring } from \"../stores/board\";\r\n\r\n    let current = 0;\r\n\r\n    let seasons = [\r\n        {name: \"Printemps\", r1:$scoring[0].calc, r2:$scoring[1].calc, ended: false, score: {r1: 0, r2: 0, coins: 0, monsters: 0, total: 0}},\r\n        {name: \"Été\", r1:$scoring[1].calc, r2:$scoring[2].calc, ended: false, score: {r1: 0, r2: 0, coins: 0, monsters: 0, total: 0}},\r\n        {name: \"Automne\", r1:$scoring[2].calc, r2:$scoring[3].calc, ended: false, score: {r1: 0, r2: 0, coins: 0, monsters: 0, total: 0}},\r\n        {name: \"Hiver\", r1:$scoring[3].calc, r2:$scoring[0].calc, ended: false, score: {r1: 0, r2: 0, coins: 0, monsters: 0, total: 0}},\r\n    ]\r\n\r\n    const endSeason = () => {\r\n        let r1 = seasons[current].r1(get(cells),get(cellsPerLine));\r\n        let r2 = seasons[current].r2(get(cells),get(cellsPerLine));\r\n        let cs = get(coins);\r\n        let monsters = $cells.filter(c => c.type == CELL_TYPES.MONSTER.id).map(c => c.getNeighborsOfType(CELL_TYPES.EMPTY.id)).reduce((a,b) => a.concat(b),[]).filter((e,i,a) => a.indexOf(e) == i).length;\r\n        seasons[current].score = {r1, r2, coins: cs, monsters, total: r1+r2+cs-monsters};\r\n\r\n        current++;\r\n    }\r\n</script>\r\n\r\n<div>\r\n    <div class=\"scores\">\r\n        {#each seasons as season}\r\n            <div class=\"score\">\r\n                <div class=\"cell rule\">{season.score.r1}</div>\r\n                <div class=\"cell rule\">{season.score.r2}</div>\r\n                <div class=\"cell coins\">{season.score.coins}</div>\r\n                <div class=\"cell monsters\">-{season.score.monsters}</div>\r\n                <div class=\"cell sstotal\">{season.score.total}</div>\r\n            </div>\r\n        {/each}\r\n    </div>\r\n    {#if current < seasons.length}\r\n        <button class=\"next-season\" on:click={endSeason}>Next season</button>\r\n    {:else}\r\n        <div class=\"total\">{seasons.reduce((a,b) => a + b.score.total, 0)}</div>\r\n    {/if}\r\n</div>\r\n\r\n<style>\r\n    .scores {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        margin-bottom: 16px;\r\n    }\r\n\r\n    .score {\r\n        display: grid;\r\n        grid-template-columns: auto auto auto;\r\n        grid-template-rows: auto auto;\r\n        border: solid 1px black;\r\n        width: 100%;\r\n        margin: 0 8px;\r\n        text-align: center;\r\n    }\r\n    .score:first-child {\r\n        margin-left: 0;\r\n    }\r\n    .score:last-child {\r\n        margin-right: 0;\r\n    }\r\n\r\n    .cell {\r\n        border: solid 1px black;\r\n        height: 100%;\r\n    }\r\n\r\n    .cell.sstotal {\r\n        font-size: 24px;\r\n        line-height: 40px;\r\n        grid-column: 3;\r\n        grid-row-start: 1;\r\n        grid-row-end: 3;\r\n    }\r\n\r\n    .total {\r\n        background-image: url(\"../assets/img/shield.svg\");\r\n        background-repeat: no-repeat;\r\n        background-size: contain;\r\n        width: 64px;\r\n        height: 64px;\r\n        flex-shrink: 0;\r\n        text-align: center;\r\n        line-height: 40px;\r\n        margin: 0 auto;\r\n    }\r\n\r\n    .next-season {\r\n        width: 100%;\r\n    }\r\n</style>","<script>\r\n    import { onMount } from 'svelte';\r\n    import Cell from './cell.svelte';\r\n    import {cells, cellsPerLine, CELL_TYPES, title} from '../stores/board';\r\n    import { isOpen, selectedCell } from '../stores/modal';\r\n\timport Coins from \"./coins.svelte\";\r\n    import { username } from '../stores/user';\r\n    import Scores from './scores.svelte';\r\n\r\n    const selectCellType = (c) => {\r\n        if(Object.values(CELL_TYPES).filter(t => t.id == c.type && t.isEditable).length > 0) \r\n            $isOpen = true;\r\n        $selectedCell = c.id;\r\n    };\r\n\r\n    onMount(() => {\r\n        window.addEventListener('beforeunload', (e) => {\r\n\t\t\te.preventDefault();\r\n            e.returnValue = '';\r\n            return;\r\n        });\r\n    })\r\n</script>\r\n\r\n<div class=\"app\">\r\n    <div class=\"header\">\r\n        <div class=\"cartographer-infos\">\r\n            <p class=\"label\">Cartographer :</p>\r\n            <h1 class=\"name\">{$username}</h1>\r\n            <p class=\"label\">Title :</p>\r\n            <h1 class=\"title\">{$title}</h1>\r\n        </div>\r\n        <div class=\"compass\"></div>\r\n    </div>\r\n    <div class=\"board\">\r\n    {#each $cells as cell, index}\r\n        <Cell click={() => selectCellType(cell)}\r\n            data={cell}\r\n            isFisrtCol={index % $cellsPerLine == 0} \r\n            isFisrtLine={index < $cellsPerLine} \r\n            isLastCol={index % $cellsPerLine == $cellsPerLine - 1} \r\n            isLastLine={index >= $cells.length - $cellsPerLine} />\r\n    {/each}\r\n    </div>\r\n\t<Coins />\r\n    <Scores />\r\n</div>\r\n\r\n<style>\r\n    .app {\r\n        margin: 0 auto;\r\n        max-width: 640px;\r\n    }\r\n\r\n    .header {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: space-between;\r\n\t\talign-items: stretch;\r\n\t}\r\n\r\n\t.label {\r\n\t\ttext-transform: uppercase;\r\n\t\tmargin: 0;\r\n\t\tfont-size: 14px;\r\n\t}\r\n\r\n\t.name, .title {\r\n\t\tcolor: #ff3e00;\r\n\t\ttext-transform: uppercase;\r\n\t\tmargin-top: 0;\r\n\t\tfont-weight: 100;\r\n\t}\r\n\r\n\t.compass {\r\n        background-image: url(\"../assets/img/compass.svg\");\r\n\t\tbackground-position: center;\r\n\t\tbackground-size: contain;\r\n\t\tbackground-repeat: no-repeat;\r\n\t\topacity: .2;\r\n\t\t\r\n\t\twidth: 96px;\r\n\t}\r\n    \r\n    .board {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        justify-content: center;\r\n        margin: 0 auto 16px;\r\n\r\n        border: solid grey 1px;\r\n    }\r\n</style>","<script>\n  import { onMount } from \"svelte\";\n\n  let ref;\n  let portal;\n\n  onMount(() => {\n    // Create and append a DOM node to `document.body`\n    // and render the component into it.\n    portal = document.createElement(\"div\");\n    portal.setAttribute(\"data-svelte-dialog-portal\", \"true\");\n    document.body.appendChild(portal);\n    portal.appendChild(ref);\n\n    return () => {\n      document.body.removeChild(portal);\n    };\n  });\n</script>\n\n<div bind:this={ref}>\n  <slot />\n</div>\n","<script>\n  import { onMount } from \"svelte\";\n\n  // Props\n  export let enabled;\n\n  let originalAttributes = [];\n\n  const hideFromScreenReader = (node) => {\n    originalAttributes.push({\n      ariaHidden: node.getAttribute(\"aria-hidden\"),\n      inert: node.getAttribute(\"inert\"),\n    });\n\n    node.setAttribute(\"aria-hidden\", \"true\");\n    node.setAttribute(\"inert\", \"true\");\n  };\n\n  const exposeToScreenReader = (node, i) => {\n    const { ariaHidden, inert } = originalAttributes[i];\n\n    if (!ariaHidden) {\n      node.removeAttribute(\"aria-hidden\");\n    } else {\n      node.setAttribute(\"aria-hidden\", ariaHidden);\n    }\n\n    if (!inert) {\n      node.removeAttribute(\"inert\");\n    }\n  };\n\n  onMount(() => {\n    if (!enabled) {\n      // `DialogContent` has the `aria-modal` attribute. This indicates to screen readers\n      // that only content contained within the dialog should be accessible to the user.\n      // Modern screen readers respect this attribute. In cases where support is inadequate,\n      // this legacy workaround can be enabled.\n      return;\n    }\n\n    // Grab all children in the `body` except for the dialog portal\n    const children = document.querySelectorAll(\"body > *:not([data-svelte-dialog-portal])\");\n    children.forEach(hideFromScreenReader);\n\n    return () => {\n      children.forEach(exposeToScreenReader);\n    };\n  });\n</script>\n\n<slot />\n","<script>\n  import { onMount, onDestroy, tick } from \"svelte\";\n\n  // Props\n  export let initialFocusElement;\n  export let returnFocusElement;\n\n  let ref;\n  let tabbableChildren;\n  let firstTabbableChild;\n  let lastTabbableChild;\n  let returnFocusElem;\n\n  onMount(() => {\n    returnFocusElem = returnFocusElement || document.activeElement;\n    tabbableChildren = [...ref.querySelectorAll(\"*\")].filter((node) => node.tabIndex >= 0);\n    firstTabbableChild = tabbableChildren[0];\n    lastTabbableChild = tabbableChildren[tabbableChildren.length - 1];\n\n    // Wait for children to mount before trying to focus `initialFocusElement`\n    tick().then(() => {\n      if (initialFocusElement) {\n        initialFocusElement.focus();\n      } else {\n        const initialFocusElem =\n          ref.querySelector(\"[autofocus]\") ||\n          firstTabbableChild ||\n          ref.querySelector(\"[data-svelte-dialog-content]\");\n\n        initialFocusElem.focus();\n      }\n    });\n  });\n\n  onDestroy(() => {\n    if (returnFocusElem) {\n      returnFocusElem.focus();\n    }\n  });\n\n  // We can't test keyboard semantics in `jsdom`, so it doesn't\n  // make sense to include this function in the coverage report.\n  // istanbul ignore next\n  const handleKeydown = (event) => {\n    if (event.key !== \"Tab\") {\n      return;\n    }\n\n    if (tabbableChildren.length === 0) {\n      event.preventDefault();\n    }\n\n    if (event.shiftKey) {\n      // Handle shift + tab\n      if (document.activeElement === firstTabbableChild) {\n        event.preventDefault();\n        lastTabbableChild.focus();\n      }\n    } else {\n      if (document.activeElement === lastTabbableChild) {\n        event.preventDefault();\n        firstTabbableChild.focus();\n      }\n    }\n  };\n</script>\n\n<svelte:window on:keydown={handleKeydown} />\n\n<div bind:this={ref}>\n  <slot />\n</div>\n","<script>\n  import { onMount } from \"svelte\";\n\n  onMount(() => {\n    const { body, documentElement: html } = document;\n    const scrollBarWidth = window.innerWidth - html.clientWidth;\n    const bodyPaddingRight =\n      parseInt(window.getComputedStyle(body).getPropertyValue(\"padding-right\")) || 0;\n\n    // 1. Fixes a bug in iOS and desktop Safari whereby setting `overflow: hidden` on\n    //    the html/body does not prevent scrolling.\n    // 2. Fixes a bug in desktop Safari where `overflowY` does not prevent scroll if an\n    //   `overflow-x` style is also applied to the body.\n    html.style.position = \"relative\"; // [1]\n    html.style.overflow = \"hidden\"; // [2]\n    body.style.position = \"relative\"; // [1]\n    body.style.overflow = \"hidden\"; // [2]\n    body.style.paddingRight = `${bodyPaddingRight + scrollBarWidth}px`;\n\n    return () => {\n      html.style.position = \"\";\n      html.style.overflow = \"\";\n      body.style.position = \"\";\n      body.style.overflow = \"\";\n      body.style.paddingRight = \"\";\n    };\n  });\n</script>\n\n<slot />\n","<script>\n  import TrapScreenReader from \"./TrapScreenReader.svelte\";\n  import TrapFocus from \"./TrapFocus.svelte\";\n  import LockScroll from \"./LockScroll.svelte\";\n\n  // Props\n  export let onDismiss;\n  export let initialFocusElement;\n  export let returnFocusElement;\n  export let ariaModalLegacy;\n\n  const handleClick = () => {\n    onDismiss();\n  }\n\n  const handleKeydown = (event) => {\n    if (event.key === \"Escape\") {\n      onDismiss();\n    }\n  }\n</script>\n\n<style>\n  div {\n    background-color: rgba(0, 0, 0, 0.3);\n    position: fixed;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    overflow: auto;\n  }\n</style>\n\n<svelte:window on:keydown={handleKeydown} />\n\n<TrapScreenReader enabled={ariaModalLegacy}>\n  <TrapFocus {initialFocusElement} {returnFocusElement}>\n    <LockScroll>\n      <div\n        {...$$restProps}\n        data-svelte-dialog-overlay\n        on:click|self|stopPropagation={handleClick}\n      >\n        <slot />\n      </div>\n    </LockScroll>\n  </TrapFocus>\n</TrapScreenReader>\n","<script>\n  import DialogPortal from \"./DialogPortal.svelte\";\n  import DialogOverlayInner from \"./DialogOverlayInner.svelte\";\n\n  // Props\n  export let isOpen;\n  export let onDismiss;\n  export let initialFocusElement = null;\n  export let returnFocusElement = null;\n  export let ariaModalLegacy = false;\n</script>\n\n{#if isOpen}\n  <DialogPortal>\n    <DialogOverlayInner\n      {...$$restProps}\n      {onDismiss}\n      {initialFocusElement}\n      {returnFocusElement}\n      {ariaModalLegacy}\n    >\n      <slot />\n    </DialogOverlayInner>\n  </DialogPortal>\n{/if}\n","<style>\n  div {\n    background-color: #fff;\n    margin: 15vh auto;\n    outline: none;\n    padding: 2rem;\n    width: 50vw; \n  }\n</style>\n\n<div\n  {...$$restProps}\n  data-svelte-dialog-content\n  aria-modal=\"true\"\n  role=\"dialog\"\n  tabindex=\"-1\"\n>\n  <slot />\n</div>\n","<script>\r\n    import { DialogOverlay, DialogContent } from 'svelte-accessible-dialog';\r\n    import { isOpen, selectedCell } from '../stores/modal';\r\n    import { cells, CELL_TYPES, Cell as CellClass } from '../stores/board';\r\n    import Cell from './cell.svelte';\r\n\r\n    let types = Object.values(CELL_TYPES).filter(t => t.isEditable);\r\n  \r\n    const open = () => {\r\n      $isOpen = true;\r\n    };\r\n    const close = () => {\r\n      $isOpen = false;\r\n    };\r\n\r\n    const selectType = (type) => {\r\n        $cells = $cells.map(c => c.id == $selectedCell ? {...c, type}:c)\r\n        close();\r\n    }\r\n</script>\r\n  \r\n  <DialogOverlay isOpen={$isOpen} onDismiss={close} class=\"overlay\">\r\n    <DialogContent aria-label=\"Announcement\" class=\"content\">\r\n            <button on:click={close} class=\"close\" aria-label=\"close\"><svg width=\"100%\" height=\"100%\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><g data-name=\"Layer 2\"><g data-name=\"close\"><rect width=\"24\" height=\"24\" transform=\"rotate(180 12 12)\" opacity=\"0\"/><path fill=\"currentColor\" d=\"M13.41 12l4.3-4.29a1 1 0 1 0-1.42-1.42L12 10.59l-4.29-4.3a1 1 0 0 0-1.42 1.42l4.3 4.29-4.3 4.29a1 1 0 0 0 0 1.42 1 1 0 0 0 1.42 0l4.29-4.3 4.29 4.3a1 1 0 0 0 1.42 0 1 1 0 0 0 0-1.42z\"/></g></g></svg></button>\r\n            <h1>Select type</h1>\r\n            <p>Select the type the cell should be applied : </p>\r\n            <div class=\"cells\">\r\n                {#each types as type}\r\n                    <Cell data={new CellClass(0, type.id)} cellsPerLine={types.length / 2} click={() => selectType(type.id)} />\r\n                {/each}\r\n            </div>\r\n    </DialogContent>\r\n  </DialogOverlay>\r\n\r\n<style>\r\n    :global([data-svelte-dialog-overlay].overlay) {\r\n        background-color: rgba(0, 0, 0, 0.7);\r\n    }\r\n\r\n    :global([data-svelte-dialog-content].content) {\r\n        position: relative;\r\n        border: 2px solid #000;\r\n        padding: 16px;\r\n        width: 72vw;\r\n    }\r\n\r\n    .close {\r\n        cursor: pointer;\r\n        position: absolute;\r\n        right: -32px;\r\n        border: none;\r\n        background: none;\r\n        padding: 0;\r\n        margin: 0;\r\n        width: 32px;\r\n        height: 32px;\r\n        color: white;\r\n    }\r\n\r\n    .cells {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        justify-content: center;\r\n    }\r\n\r\n    h1 {\r\n        margin-top: 0;\r\n    }\r\n\r\n    @media (min-width: 640px) {\r\n        :global([data-svelte-dialog-content].content) {\r\n            width: 50vw;\r\n        }\r\n    }\r\n</style>","<script>\r\n    import { username } from \"../stores/user\";\r\n\r\n    let name = $username;\r\n\r\n    const handleConfirm = (e) => {\r\n        e.preventDefault();\r\n        $username = name;\r\n    }\r\n</script>\r\n\r\n<div class=\"login-container\">\r\n    <form class=\"login\" on:submit={handleConfirm}>\r\n        <img src=\"assets/img/compass.svg\" alt=\"\" class=\"logo\"/>\r\n\r\n        <label for=\"username\" class=\"label\">Cartographer</label>\r\n        <input type=\"text\" id=\"username\" name=\"username\" class=\"input\" bind:value={name}/>\r\n\r\n        <button class=\"confirm\">Confirm</button>\r\n    </form>\r\n</div>\r\n\r\n<style>\r\n    .login-container {\r\n        width: 100%;\r\n        height: 95vh;\r\n        display: flex;\r\n        justify-content: center;\r\n    }\r\n\r\n    .login {\r\n        padding: 6px;\r\n        max-width: 280px;\r\n        width: 100%;\r\n        box-shadow: 0px 0px 3px 0px #CDCDCD;\r\n\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: stretch;\r\n        align-self: center;\r\n    }\r\n\r\n    .logo {\r\n        width: 48px;\r\n        height: 48px;\r\n        display: block;\r\n        margin: -24px auto 16px;\r\n    }\r\n\r\n    .label {\r\n        color: #ff3e00;\r\n        text-transform: uppercase;\r\n        margin: 0 0 8px 0;\r\n        font-weight: 100;\r\n    }\r\n\r\n    @media (min-width: 640px) {\r\n        .login {\r\n            align-self: flex-start;\r\n            margin-top: 96px;\r\n        }\r\n    }\r\n</style>","import { getRegions, CELL_TYPES } from \"../stores/board\";\r\n\r\nexport const rules = [   \r\n    {\r\n        id: 26, \r\n        type: \"Forêt\", \r\n        name: \"Bois de la Sentinelle\", \r\n        desc: \"Gagnez une étoile de réputation pour chaque case Forêt adjacente au bord du parchemin.\",\r\n        calc: (cells, cellsPerLine) => cells.filter(c => c.type == CELL_TYPES.FOREST.id && (c.id % cellsPerLine == 0 || c.id < cellsPerLine || c.id % cellsPerLine == cellsPerLine - 1 || c.id >= cells.length - cellsPerLine)).length\r\n    },\r\n    {\r\n        id: 27, \r\n        type: \"Forêt\", \r\n        name: \"Chemin Verdoyant\", \r\n        desc: \"Gagnez une étoile de réputation pour chaque ligne ou colonne ayant au moins une case Forêt. La même case Forêt peut être décomptée à la fois pour une ligne et pour une colonne.\",\r\n        calc: (cells, cellsPerLine) => cells.filter(c => c.type == CELL_TYPES.FOREST.id).map(c => [c.id%cellsPerLine +1, -Math.trunc(c.id/cellsPerLine) -1]).flat(1).filter((c, index, a) => a.indexOf(c) == index).length\r\n    },\r\n    {\r\n        id: 28, \r\n        type: \"Forêt\", \r\n        name: \"Arbres-Vigies\", \r\n        desc: \"Gagnez une étoile de réputation pour chaque case Forêt entourée sur ses quatres côtés par une case remplies ou par le bord du parchemin.\",\r\n        calc: (cells, cellsPerLine) => cells.filter(c => c.type == CELL_TYPES.FOREST.id && c.isSurrounded()).length\r\n    },\r\n    {\r\n        id: 29, \r\n        type: \"Forêt\", \r\n        name: \"Forêt des Hauts Plateaux\", \r\n        desc: \"Gagnez trois étoiles de réputation pour chaque case Montagne connectées à une autre case Montagne par une région de Forêts.\",\r\n        calc: (cells, cellsPerLine) => getRegions().filter(r => r.type == CELL_TYPES.FOREST.id).map(r => r.cells.reduce((a, b) => a.concat(cells[b].getNeighborsOfType(CELL_TYPES.MOUNTAIN.id)), []).filter((c, index, a) => a.indexOf(c) == index)).filter(r => r.length >= 2).reduce((a,b) => a.concat(b), []).filter((c, index, a) => a.indexOf(c) == index).length *3\r\n    },\r\n\r\n    {\r\n        id: 30, \r\n        type: \"Ferme/Lac\", \r\n        name: \"Cannaux d'Irrigation\", \r\n        desc: \"Gagnez une étoile de réputation pour chaque case Lac adjacente à au moins une Ferme. Gagnez une étoile de réputation pour chaque case Ferme adjacente à au moins une case Lac.\",\r\n        calc: (cells, cellsPerLine) => cells.filter(c => c.type == CELL_TYPES.SEA.id && c.hasNeighborOfType(CELL_TYPES.FIELD.id)).length + cells.filter(c => c.type == CELL_TYPES.FIELD.id && c.hasNeighborOfType(CELL_TYPES.SEA.id)).length\r\n    },\r\n    {\r\n        id: 31, \r\n        type: \"Ferme/Lac\", \r\n        name: \"Vallée des Mages\", \r\n        desc: \"Gagnez une étoile de réputation pour chaque case Lac adjacente à une case Montagne. Gagnez une étoile de réputation pour chaque case Ferme adjacente à une case à une case Montagne.\",\r\n        calc: (cells, cellsPerLine) => 2* cells.filter(c => c.type == CELL_TYPES.SEA.id && c.hasNeighborOfType(CELL_TYPES.MOUNTAIN.id)).length + cells.filter(c => c.type == CELL_TYPES.FIELD.id && c.hasNeighborOfType(CELL_TYPES.MOUNTAIN.id)).length\r\n    },\r\n    {\r\n        id: 32, \r\n        type: \"Ferme/Lac\", \r\n        name: \"Grenier Doré\", \r\n        desc: \"Gagnez une étoile de réputation pour chaque case Lac adjacente à une case Ruines. Gagnez trois étoiles de réputation pour chaque case Ferme sur une case Ruines.\",\r\n        calc: (cells, cellsPerLine) => cells.filter(c => (c.type == CELL_TYPES.SEA.id && ((c.id < cellsPerLine ? false : cells[c.id - cellsPerLine].isRuins) || (c.id > cells.length - cellsPerLine ? false : cells[c.id + cellsPerLine].isRuins) || (c.id % cellsPerLine == 0 ? false : cells[c.id -1].isRuins) || (c.id % cellsPerLine == cellsPerLine -1 ? false : cells[c.id +1].isRuins)))).length + cells.filter(c => c.type == CELL_TYPES.FIELD.id && cells[c.id].isRuins).length*3\r\n    },\r\n    {\r\n        id: 33, \r\n        type: \"Ferme/Lac\", \r\n        name: \"Montée des Eaux\", \r\n        desc: \"Gagnez trois étoiles de réputation pour chaque région de Ferme qui n'est adjacente ni à une case Lac ni au bord du parchemin. Gagnez trois étoiles de réputation pour chaque région de Lacs qui n'est adjacente ni à une case Ferme ni au bord du parchemin.\",\r\n        calc: (cells, cellsPerLine) => getRegions().filter(r => r.type == CELL_TYPES.FIELD.id && (r.cells.filter(cid => cells[cid].hasNeighborOfType(CELL_TYPES.SEA.id) || cells[cid].isAtEdge()).length == 0)).length *3 + getRegions().filter(r => r.type == CELL_TYPES.SEA.id && (r.cells.filter(cid => cells[cid].hasNeighborOfType(CELL_TYPES.FIELD.id) || cells[cid].isAtEdge()).length == 0)).length *3\r\n    },\r\n\r\n    {\r\n        id: 34, \r\n        type: \"Village\", \r\n        name:\"Places Fortes\", \r\n        desc: \"Gagnez huit étoiles de réputationpour chaque région de six Villages ou plus.\",\r\n        calc: (cells, cellsPerLine) => getRegions().filter(r => r.type == CELL_TYPES.VILLAGE.id && r.cells.length >= 6).length *8\r\n    },\r\n    {\r\n        id: 35, \r\n        type: \"Village\", \r\n        name:\"Grande Cité\", \r\n        desc: \"Gagnez une étoile de réputation pour chaque case Village dans la plus grande région de Village qui n'est pas adjacente à une case montagne.\",\r\n        calc: (cells, cellsPerLine) => getRegions().filter(r => r.type == CELL_TYPES.VILLAGE.id && r.cells.filter(cid => cells[cid].hasNeighborOfType(CELL_TYPES.MOUNTAIN.id)).length == 0).reduce((a,b) => a > b.cells.length ? a : b.cells.length, 0)\r\n    },\r\n    {\r\n        id: 36, \r\n        type: \"Village\", \r\n        name:\"Plaines de l'Or Vert\", \r\n        desc: \"Gagnez trois étoiles de réputation pour chaque région de villages adjacente à au moins trois types de terrains différents.\",\r\n        calc: (cells, cellsPerLine) => getRegions().filter(r => r.type == CELL_TYPES.VILLAGE.id && r.cells.reduce((a,b) => a.concat(cells[b].getNeighborsType()), []).filter((c, index, a) => a.indexOf(c) == index && c != CELL_TYPES.VILLAGE.id).length >= 3).length *3\r\n    },\r\n    {\r\n        id: 37, \r\n        type: \"Village\", \r\n        name:\"Remparts\", \r\n        desc: \"Gagnez deux étoiles de réputation pour chaque case Village dans la deuxième plus grande régions de villages. En cas d'égalité, ne décomptez qu'une seule des régions concernées.\",\r\n        calc: (cells, cellsPerLine) => 2* (getRegions().filter(r => r.type == CELL_TYPES.VILLAGE.id).map(r => r.cells.length).sort((a,b) => b-a)[1] || 0)\r\n    },\r\n \r\n    {\r\n        id: 38, \r\n        type: \"Plateau\",\r\n        name: \"Frontières\", \r\n        desc: \"Gagnez six étoiles de réputation pour chaque ligne complète et chaque colonne complète de cases remplies.\",\r\n        calc: (cells, cellsPerLine) => (cellsPerLine + cells.length/cellsPerLine - cells.filter(c => c.type == CELL_TYPES.EMPTY.id).map(c => [c.id%cellsPerLine +1, -Math.trunc(c.id/cellsPerLine) -1]).flat(1).filter((c, index, a) => a.indexOf(c) == index).length) *6\r\n    },\r\n    {\r\n        id: 39, \r\n        type: \"Plateau\", \r\n        name: \"Baronnie Perdue\", \r\n        desc: \"Gagnez trois étoiles de réputation pour chaque case constituant l'un des bords du plus grand carré de cases remplies.\",\r\n        calc: (cells, cellsPerLine) => 3* Math.max(...cells.map(c => c.type > 0 ? 1:0).map((e, i, a) => {let v = i < cellsPerLine || i%cellsPerLine == 0 ? e : (e > 0 ? 1 + Math.min(a[i-cellsPerLine],a[i-1],a[i-cellsPerLine-1]) : e); a[i]=v; return v;}))\r\n    },\r\n    {\r\n        id: 40, \r\n        type: \"Plateau\", \r\n        name: \"Route Brisée\", \r\n        desc: \"Gagnez trois étoiles de réputation pour chaque ligne diagonale de cases remplie qui touchent le bord gauche et le bord inférieur du parchemin.\",\r\n        calc: (cells, cellsPerLine) => {let completeDiagonals = 0; for(let i = 0; i < cells.length/cellsPerLine; i++) { let j = 0; for (; j < cellsPerLine - i;) {if(cells[i*cellsPerLine+j*cellsPerLine+j].type == CELL_TYPES.EMPTY.id) break; j++} if(j == cellsPerLine - i) completeDiagonals++} return 3* completeDiagonals}\r\n    },\r\n    {\r\n        id: 41, \r\n        type: \"Plateau\", \r\n        name: \"Chaudrons\", \r\n        desc: \"Gagnez une étoile de réputation pour chaque case vierge entourée de ses quatre côtés par une case remplies ou par le bord du parchemin.\",\r\n        calc: (cells, cellsPerLine) => cells.filter(c => c.type == CELL_TYPES.EMPTY.id && c.isSurrounded()).length\r\n    },\r\n]","<script>\r\n    import { title, scoring, boards, board } from \"../stores/board\";\r\n    import { rules } from \"../utils/rules\"\r\n    import Board from \"./board.svelte\";\r\n\r\n    let step = 0;\r\n    let steps = 6;\r\n\r\n    const handleConfirm = (e) => {\r\n        e.preventDefault();\r\n        step ++;\r\n    }\r\n</script>\r\n\r\n{#if step < steps}\r\n<div class=\"container\">\r\n    <div class=\"stepper\">\r\n        <form class=\"step\" class:current={step==0} class:passed={step>0} on:submit={handleConfirm}>\r\n            <img src=\"assets/img/map.svg\" alt=\"\" class=\"logo\"/>\r\n\r\n            <label for=\"title\" class=\"label\">Map title</label>\r\n            <input type=\"text\" id=\"title\" name=\"title\" class=\"input\" bind:value={$title}/>\r\n\r\n            <button class=\"confirm\">Confirm</button>\r\n        </form>\r\n\r\n        <form class=\"step\" class:current={step==1} class:passed={step>1} on:submit={handleConfirm}>\r\n            <div class=\"logo score\">\r\n                <span class=\"letter\">A</span>\r\n            </div>\r\n            \r\n            <label for=\"title\" class=\"label\">Scoring A</label>\r\n            <select bind:value={$scoring[0]} required>\r\n                <option selected disabled value=\"\">Select scoring card</option>\r\n                {#each rules.map(r => r.type).filter((r,i,a) => a.indexOf(r) == i) as type}\r\n                <optgroup label={type}>\r\n                    {#each rules.filter(r => r.type == type) as rule}\r\n                    <option value={rule}>{rule.name}</option>\r\n                    {/each}\r\n                </optgroup> \r\n                {/each}\r\n            </select>\r\n\r\n            <button class=\"confirm\">Confirm</button>\r\n        </form>\r\n\r\n        <form class=\"step\" class:current={step==2} class:passed={step>2} on:submit={handleConfirm}>\r\n            <div class=\"logo score\">\r\n                <span class=\"letter\">B</span>\r\n            </div>\r\n            \r\n            <label for=\"title\" class=\"label\">Scoring B</label>\r\n            <select bind:value={$scoring[1]} required>\r\n                <option selected disabled value=\"\">Select scoring card</option>\r\n                {#each rules.map(r => r.type).filter((r,i,a) => a.indexOf(r) == i) as type}\r\n                <optgroup label={type}>\r\n                    {#each rules.filter(r => r.type == type) as rule}\r\n                    <option value={rule}>{rule.name}</option>\r\n                    {/each}\r\n                </optgroup> \r\n                {/each}\r\n            </select>\r\n\r\n            <button class=\"confirm\">Confirm</button>\r\n        </form>\r\n\r\n        <form class=\"step\" class:current={step==3} class:passed={step>3} on:submit={handleConfirm}>\r\n            <div class=\"logo score\">\r\n                <span class=\"letter\">C</span>\r\n            </div>\r\n\r\n            <label for=\"title\" class=\"label\">Scoring C</label>\r\n            <select bind:value={$scoring[2]} required>\r\n                <option selected disabled value=\"\">Select scoring card</option>\r\n                {#each rules.map(r => r.type).filter((r,i,a) => a.indexOf(r) == i) as type}\r\n                <optgroup label={type}>\r\n                    {#each rules.filter(r => r.type == type) as rule}\r\n                    <option value={rule}>{rule.name}</option>\r\n                    {/each}\r\n                </optgroup> \r\n                {/each}\r\n            </select>\r\n\r\n            <button class=\"confirm\">Confirm</button>\r\n        </form>\r\n\r\n        <form class=\"step\" class:current={step==4} class:passed={step>4} on:submit={handleConfirm}>\r\n            <div class=\"logo score\">\r\n                <span class=\"letter\">D</span>\r\n            </div>\r\n\r\n            <label for=\"title\" class=\"label\">Scoring D</label>\r\n            <select bind:value={$scoring[3]} required>\r\n                <option selected disabled value=\"\">Select scoring card</option>\r\n                {#each rules.map(r => r.type).filter((r,i,a) => a.indexOf(r) == i) as type}\r\n                <optgroup label={type}>\r\n                    {#each rules.filter(r => r.type == type) as rule}\r\n                    <option value={rule}>{rule.name}</option>\r\n                    {/each}\r\n                </optgroup> \r\n                {/each}\r\n            </select>\r\n\r\n            <button class=\"confirm\">Confirm</button>\r\n        </form>\r\n\r\n        <form class=\"step\" class:current={step==5} class:passed={step>5} on:submit={handleConfirm}>\r\n            <div class=\"logo score\">\r\n                <span class=\"letter\">D</span>\r\n            </div>\r\n\r\n            <label for=\"title\" class=\"label\">Map</label>\r\n            <select bind:value={$board} required>\r\n                <option selected disabled>Select map template</option>\r\n                {#each boards as board}\r\n                    <option value={board}>{board.name}</option>\r\n                {/each}\r\n            </select>\r\n\r\n            <button class=\"confirm\">Confirm</button>\r\n        </form>\r\n    </div>\r\n</div>\r\n{:else}\r\n    <Board />\r\n{/if}\r\n\r\n<style>\r\n    .container {\r\n        width: 100%;\r\n        height: 95vh;\r\n        display: flex;\r\n        justify-content: center;\r\n    }\r\n\r\n    .stepper {\r\n        padding: 6px;\r\n        max-width: 280px;\r\n        width: 100%;\r\n        box-shadow: 0px 0px 3px 0px #CDCDCD;\r\n        position: relative;\r\n        align-self: center;\r\n    }\r\n\r\n    .step {\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: stretch;\r\n        align-self: center;\r\n        position: absolute;\r\n        left: 240px;\r\n        transition: all ease .5s;\r\n        opacity: 0;\r\n        left: 240px;\r\n    }\r\n\r\n    .step.current {\r\n        position: relative;\r\n        opacity: 1;\r\n        left: 0px;\r\n    }\r\n\r\n    .step.passed {\r\n        display: flex;\r\n        opacity: 0;\r\n        left: -240px;\r\n    }\r\n\r\n    .logo {\r\n        width: 48px;\r\n        height: 48px;\r\n        display: block;\r\n        margin: -24px auto 16px;\r\n        position: relative;\r\n    }\r\n\r\n    .logo.score {\r\n        background-image:url('../assets/img/scoring.svg');\r\n    }\r\n\r\n    .logo.score .letter {\r\n        padding: 14px;\r\n        line-height: 48px;\r\n        font-size: 24px;\r\n        font-family: cursive;\r\n    }\r\n\r\n    .label {\r\n        color: #ff3e00;\r\n        text-transform: uppercase;\r\n        margin: 0 0 8px 0;\r\n        font-weight: 100;\r\n    }\r\n\r\n    @media (min-width: 640px) {\r\n        .stepper {\r\n            align-self: flex-start;\r\n            margin-top: 96px;\r\n        }\r\n    }\r\n</style>","<script>\r\n\timport Board from \"./components/board.svelte\";\r\n\timport Modal from \"./components/modal.svelte\";\r\n\timport Login from \"./components/login.svelte\";\r\n\timport Setup from \"./components/setup.svelte\";\r\n\timport { username } from \"./stores/user\";\r\n</script>\r\n\r\n\r\n<div>\r\n\t{#if !$username}\r\n\t\t<Login />\r\n\t{:else}\r\n\t\t<Setup />\r\n\t{/if}\r\n\r\n\t<Modal />\r\n</div>\r\n\r\n<style>\r\n\t\r\n</style>","import App from './App.svelte';\r\n\r\nconst app = new App({\r\n\ttarget: document.body\r\n});\r\n\r\nexport default app;"],"names":["noop","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","subscribe","store","callbacks","unsub","unsubscribe","get_store_value","value","_","component_subscribe","component","callback","$$","on_destroy","push","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","slice","update_slot","slot","slot_definition","dirty","get_slot_changes_fn","get_slot_context_fn","slot_changes","lets","undefined","merged","len","Math","max","length","i","get_slot_changes","slot_context","p","exclude_internal_props","props","result","compute_rest_props","keys","rest","Set","has","set_store_value","ret","set","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","d","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","removeAttribute","getAttribute","setAttribute","set_attributes","attributes","descriptors","getOwnPropertyDescriptors","__proto__","key","style","cssText","set_data","wholeText","set_input_value","input","set_style","important","setProperty","select_option","select","option","__value","selected","select_value","selected_option","querySelector","toggle_class","toggle","classList","current_component","set_current_component","get_current_component","Error","onMount","on_mount","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","schedule_update","then","flush","add_render_callback","flushing","seen_callbacks","update","pop","add","clear","fragment","before_update","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","get_spread_update","levels","updates","to_null_out","accounted_for","n","create_component","mount_component","customElement","m","new_on_destroy","map","filter","destroy_component","init","instance","create_fragment","not_equal","parent_component","bound","on_disconnect","context","Map","skip_bound","ready","fill","make_dirty","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","[object Object]","this","$destroy","type","index","indexOf","splice","$$props","obj","$$set","subscriber_queue","writable","start","stop","subscribers","new_value","run_queue","s","invalidate","subscriber","getRegions","get","cells","cell","CELL_TYPES","EMPTY","id","cs","cellsPerLine","reduce","regionsReducer","regions","region","isArray","found","some","_r","includes","concat","isEditable","MOUNTAIN","FOREST","FIELD","SEA","VILLAGE","MONSTER","CREVASSE","Cell","isRuins","hasNeighborOfType","_type","getNeighborsOfType","neighbors","getNeighborsType","isAtEdge","isSurrounded","boards","array","initBoard","v","board","coins","title","scoring","$cpl","isFisrtLine","isFisrtCol","isLastLine","isLastCol","click","currentValue","isOpen","selectedCell","setCoin","quantity","$coins","username","localStorage","score","r1","r2","monsters","total","current","seasons","$scoring","calc","ended","$cells","e","selectCellType","values","t","$isOpen","$selectedCell","window","preventDefault","returnValue","ref","portal","body","enabled","originalAttributes","hideFromScreenReader","ariaHidden","inert","exposeToScreenReader","querySelectorAll","tabbableChildren","firstTabbableChild","lastTabbableChild","returnFocusElem","initialFocusElement","returnFocusElement","activeElement","tabIndex","focus","shiftKey","documentElement","html","scrollBarWidth","innerWidth","clientWidth","bodyPaddingRight","parseInt","getComputedStyle","getPropertyValue","position","overflow","paddingRight","call","stopPropagation","onDismiss","ariaModalLegacy","spread_props","CellClass","types","close","selectType","$username","rules","desc","trunc","flat","cid","sort","min","completeDiagonals","j","steps","step","$title","$board"],"mappings":"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"}